<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JWTDemo</name>
    </assembly>
    <members>
        <member name="M:JWTDemo.Controllers.v3.CategoriesController.GetCategories">
            <summary>
            Get a list of Category
            </summary>
            <returns>A list of Category</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v3.CategoriesController.GetCategory(System.Guid)">
            <summary>
            Get a specific Category
            </summary>
            <param name="id"></param>
            <returns>A specific Category</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v3.CategoriesController.PutCategory(System.Guid,Domain.ViewModels.Category.CategoryDTO)">
             <summary>
             Update a Category
             </summary>
             <param name="id"></param>
             <param name="categoryDTO"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /api/Categories/{id}
                 {
                   "name": "caategory #1"
                 }
            
             </remarks>
             <response code="204">No content</response>
             <response code="400">If the category is null</response>
             <response code="404">If the category is not found</response>
        </member>
        <member name="M:JWTDemo.Controllers.v3.CategoriesController.PostCategory(Domain.ViewModels.Category.CategoryDTO)">
             <summary>
             Creates a Category
             </summary>
             <param name="categoryDTO"></param>
             <returns>A newly created Category</returns>
             <remarks>
             Sample request:
            
                 POST /api/Categories
                 {
                   "name": "caategory #1"
                 }
            
             </remarks>
             <response code="201">Returns the newly created category</response>
             <response code="400">If the category is null</response>
        </member>
        <member name="M:JWTDemo.Controllers.v3.CategoriesController.DeleteCategory(System.Guid)">
            <summary>
            Deletes a specific Category
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JWTDemo.Controllers.v3.ProductsController.GetProducts">
            <summary>
            Get a list of Product
            </summary>
            <returns>A list of ProductDTO</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v3.ProductsController.GetProduct(System.Guid)">
            <summary>
            Get a specific Product
            </summary>
            <param name="id"></param>
            <returns>A specific ProductDTO</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v3.ProductsController.PutProduct(System.Guid,Domain.ViewModels.Product.ProductDTO)">
             <summary>
             Creates a Product
             </summary>
             <param name="id"></param>
             <param name="productDTO"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /api/Products/{id}
                 {
                   "categoryName": "category #1",
                   "name": "product #1",
                   "description": "string",
                   "price": 1000,
                   "code": "string"
                 }
            
             </remarks>
             <response code="204">No content</response>
             <response code="400">If the product is null</response>
             <response code="404">If the product is not found</response>
        </member>
        <member name="M:JWTDemo.Controllers.v3.ProductsController.PostProduct(Domain.ViewModels.Product.ProductDTO)">
             <summary>
             Creates a Product
             </summary>
             <param name="productDTO"></param>
             <returns>A newly created Product</returns>
             <remarks>
             Sample request:
            
                 POST /api/Products
                 {
                   "categoryName": "category #1",
                   "name": "product #1",
                   "description": "string",
                   "price": 1000,
                   "code": "string"
                 }
            
             </remarks>
             <response code="201">Returns the newly created product</response>
             <response code="400">If the product is null</response>
        </member>
        <member name="M:JWTDemo.Controllers.v3.ProductsController.DeleteProduct(System.Guid)">
            <summary>
            Deletes a specific Product
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JWTDemo.Controllers.v4.AuthController.Register(Domain.ViewModels.Auth.RegistrationRequest)">
             <summary>
             Sign up 
             </summary>
             <param name="request"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 POST /api/Auth/Register
                 {
                   "email": "string",
                   "username": "string",
                   "password": "string",
                   "role": "Manager"
                 }
            
             </remarks>
             <response code="201">Returns the newly created user</response>
             <response code="400">If the user is invalid</response>
        </member>
        <member name="M:JWTDemo.Controllers.v4.AuthController.Authenticate(Domain.ViewModels.Auth.AuthRequest)">
             <summary>
             Sign in
             </summary>
             <param name="request"></param>
             <returns>A AuthResponse with token</returns>
             <remarks>
             Sample request:
            
                 POST /api/Auth/Login
                 {
                   "email": "string",
                   "password": "string"
                 }
            
             </remarks>
             <response code="400">If the user is invalid</response>
             <response code="401">User doesn't exist</response>
        </member>
        <member name="M:JWTDemo.Controllers.v4.AuthController.GetProfile">
            <summary>
            Get Profile when signed in
            </summary>
            <returns>A ApplicationUser object</returns>
            <remarks></remarks>
            <response code="400">If the user is invalid</response>
            <response code="404">User doesn't exist</response>
        </member>
        <member name="M:JWTDemo.Controllers.v4.CategoriesController.GetCategories">
            <summary>
            Get a list of Category
            </summary>
            <returns>A list of Category</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v4.CategoriesController.GetCategory(System.Guid)">
            <summary>
            Get a specific Category
            </summary>
            <param name="id"></param>
            <returns>A specific Category</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v4.CategoriesController.PutCategory(System.Guid,Domain.ViewModels.Category.CategoryDTO)">
             <summary>
             Update a Category
             </summary>
             <param name="id"></param>
             <param name="categoryDTO"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /api/Categories/{id}
                 {
                   "name": "caategory #1"
                 }
            
             </remarks>
             <response code="204">No content</response>
             <response code="400">If the category is null</response>
             <response code="404">If the category is not found</response>
        </member>
        <member name="M:JWTDemo.Controllers.v4.CategoriesController.PostCategory(Domain.ViewModels.Category.CategoryDTO)">
             <summary>
             Creates a Category
             </summary>
             <param name="categoryDTO"></param>
             <returns>A newly created Category</returns>
             <remarks>
             Sample request:
            
                 POST /api/Categories
                 {
                   "name": "caategory #1"
                 }
            
             </remarks>
             <response code="201">Returns the newly created category</response>
             <response code="400">If the category is null</response>
        </member>
        <member name="M:JWTDemo.Controllers.v4.CategoriesController.DeleteCategory(System.Guid)">
            <summary>
            Deletes a specific Category
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JWTDemo.Controllers.v4.ProductsController.GetProducts">
            <summary>
            Get a list of Product
            </summary>
            <returns>A list of ProductDTO</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v4.ProductsController.GetProduct(System.Guid)">
            <summary>
            Get a specific Product
            </summary>
            <param name="id"></param>
            <returns>A specific ProductDTO</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v4.ProductsController.PutProduct(System.Guid,Domain.ViewModels.Product.ProductDTO)">
             <summary>
             Creates a Product
             </summary>
             <param name="id"></param>
             <param name="productDTO"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /api/Products/{id}
                 {
                   "categoryName": "category #1",
                   "name": "product #1",
                   "description": "string",
                   "price": 1000,
                   "code": "string"
                 }
            
             </remarks>
             <response code="204">No content</response>
             <response code="400">If the product is null</response>
             <response code="404">If the product is not found</response>
        </member>
        <member name="M:JWTDemo.Controllers.v4.ProductsController.PostProduct(Domain.ViewModels.Product.ProductDTO)">
             <summary>
             Creates a Product
             </summary>
             <param name="productDTO"></param>
             <returns>A newly created Product</returns>
             <remarks>
             Sample request:
            
                 POST /api/Products
                 {
                   "categoryName": "category #1",
                   "name": "product #1",
                   "description": "string",
                   "price": 1000,
                   "code": "string"
                 }
            
             </remarks>
             <response code="201">Returns the newly created product</response>
             <response code="400">If the product is null</response>
        </member>
        <member name="M:JWTDemo.Controllers.v4.ProductsController.DeleteProduct(System.Guid)">
            <summary>
            Deletes a specific Product
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JWTDemo.Controllers.v5.AuthController.Register(Domain.ViewModels.Auth.RegistrationRequest)">
             <summary>
             Sign up 
             </summary>
             <param name="request"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 POST /api/Auth/Register
                 {
                   "email": "string",
                   "username": "string",
                   "password": "string",
                   "role": "Manager"
                 }
            
             </remarks>
             <response code="201">Returns the newly created user</response>
             <response code="400">If the user is invalid</response>
        </member>
        <member name="M:JWTDemo.Controllers.v5.AuthController.Authenticate(Domain.ViewModels.Auth.AuthRequest)">
             <summary>
             Sign in
             </summary>
             <param name="request"></param>
             <returns>A AuthResponse with token</returns>
             <remarks>
             Sample request:
            
                 POST /api/Auth/Login
                 {
                   "email": "string",
                   "password": "string"
                 }
            
             </remarks>
             <response code="400">If the user is invalid</response>
             <response code="401">User doesn't exist</response>
        </member>
        <member name="M:JWTDemo.Controllers.v5.AuthController.GetProfile">
            <summary>
            Get Profile when signed in
            </summary>
            <returns>A ApplicationUser object</returns>
            <remarks></remarks>
            <response code="400">If the user is invalid</response>
            <response code="404">User doesn't exist</response>
        </member>
        <member name="M:JWTDemo.Controllers.v5.CategoriesController.GetCategories">
            <summary>
            Get a list of Category
            </summary>
            <returns>A list of Category</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v5.CategoriesController.GetCategory(System.Guid)">
            <summary>
            Get a specific Category
            </summary>
            <param name="id"></param>
            <returns>A specific Category</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v5.CategoriesController.PutCategory(System.Guid,Domain.ViewModels.Category.CategoryDTO)">
             <summary>
             Update a Category
             </summary>
             <param name="id"></param>
             <param name="categoryDTO"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /api/Categories/{id}
                 {
                   "name": "caategory #1"
                 }
            
             </remarks>
             <response code="204">No content</response>
             <response code="400">If the category is null</response>
             <response code="404">If the category is not found</response>
        </member>
        <member name="M:JWTDemo.Controllers.v5.CategoriesController.PostCategory(Domain.ViewModels.Category.CategoryDTO)">
             <summary>
             Creates a Category
             </summary>
             <param name="categoryDTO"></param>
             <returns>A newly created Category</returns>
             <remarks>
             Sample request:
            
                 POST /api/Categories
                 {
                   "name": "caategory #1"
                 }
            
             </remarks>
             <response code="201">Returns the newly created category</response>
             <response code="400">If the category is null</response>
        </member>
        <member name="M:JWTDemo.Controllers.v5.CategoriesController.DeleteCategory(System.Guid)">
            <summary>
            Deletes a specific Category
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JWTDemo.Controllers.v5.ProductsController.GetProducts(System.Int32,System.Int32)">
            <summary>
            Get a list of Product
            </summary>
            <returns>A list of ProductDTO</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v5.ProductsController.GetProduct(System.Guid)">
            <summary>
            Get a specific Product
            </summary>
            <param name="id"></param>
            <returns>A specific ProductDTO</returns>
        </member>
        <member name="M:JWTDemo.Controllers.v5.ProductsController.PutProduct(System.Guid,Domain.ViewModels.Product.ProductRequestDTO)">
             <summary>
             Creates a Product
             </summary>
             <param name="id"></param>
             <param name="productDTO"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /api/Products/{id}
                 {
                   "categoryName": "category #1",
                   "name": "product #1",
                   "description": "string",
                   "price": 1000,
                   "code": "string"
                 }
            
             </remarks>
             <response code="204">No content</response>
             <response code="400">If the product is null</response>
             <response code="404">If the product is not found</response>
        </member>
        <member name="M:JWTDemo.Controllers.v5.ProductsController.PostProduct(Domain.ViewModels.Product.ProductRequestDTO)">
             <summary>
             Creates a Product
             </summary>
             <param name="productDTO"></param>
             <returns>A newly created Product</returns>
             <remarks>
             Sample request:
            
                 POST /api/Products
                 {
                   "categoryName": "category #1",
                   "name": "product #1",
                   "description": "string",
                   "price": 1000,
                   "code": "string"
                 }
            
             </remarks>
             <response code="201">Returns the newly created product</response>
             <response code="400">If the product is null</response>
        </member>
        <member name="M:JWTDemo.Controllers.v5.ProductsController.DeleteProduct(System.Guid)">
            <summary>
            Deletes a specific Product
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JWTDemo.Controllers.v5.UsersController.GetUsers(System.Int32,System.Int32)">
            <summary>
            Get a list of ApplicationUser
            </summary>
            <returns>A list of ProductDTO</returns>
        </member>
    </members>
</doc>
